// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using testni_zadatak.EfCore;

#nullable disable

namespace testni_zadatak.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    partial class EF_DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GmlCoordinate", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("GmlFeatureId")
                        .HasColumnType("integer");

                    b.Property<double?>("X")
                        .HasColumnType("double precision");

                    b.Property<double?>("Y")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("modified")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GmlFeatureId");

                    b.ToTable("GmlCoordinates", (string)null);
                });

            modelBuilder.Entity("GmlFeature", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FeatureType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GmlFeatures", (string)null);
                });

            modelBuilder.Entity("testni_zadatak.Model.GmlCoordinateModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("GmlFeatureId")
                        .HasColumnType("integer");

                    b.Property<double?>("X")
                        .HasColumnType("double precision");

                    b.Property<double?>("Y")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("modified")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GmlFeatureId");

                    b.ToTable("GmlCoordinateModel", (string)null);
                });

            modelBuilder.Entity("GmlCoordinate", b =>
                {
                    b.HasOne("GmlFeature", "GmlFeature")
                        .WithMany()
                        .HasForeignKey("GmlFeatureId");

                    b.Navigation("GmlFeature");
                });

            modelBuilder.Entity("testni_zadatak.Model.GmlCoordinateModel", b =>
                {
                    b.HasOne("GmlFeature", "GmlFeature")
                        .WithMany("Coordinates")
                        .HasForeignKey("GmlFeatureId");

                    b.Navigation("GmlFeature");
                });

            modelBuilder.Entity("GmlFeature", b =>
                {
                    b.Navigation("Coordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
